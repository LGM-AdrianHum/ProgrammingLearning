/*
// Correction_Tiger.tig
// TigerCorrection (With EPITA's extensions)
// Compiled with rtc
//
// Created by P1kachu on 21/11/15.
// Copyright (c) 2015 P1kachu. All rights reserved.
//
//  Reviewed by:
//      - (null)
*/


let /* VARIABLES DEFINITIONS */

    var age := 20
    var name := "P1kachu"
    var hello := "Hello "


    type arr_of_stuff = array of string
    var shoppingList : arr_of_stuff := arr_of_stuff[3] of ""
    var list_len := 3
    var element := "a tiger"
    var in_list := 0



    /*  Part Two: */

    function TriForce() =
    (
        print("   /\\  \n");
        print("  /__\\ \n");
        print(" /\\  /\\  \n");
        print("/__\\/__\\ \n");
        print("TRIFORCE\n")
    )



    function Hello(name : string) =
    (
        print("Hello ");
        print(name);
        print("!\n")
    )


    function mod(a : int, b : int) : int = a - b * (a / b)

    var c := ""
    var user_input := ""


    function get_random() : int =
    (
        4 /* chosen by fair dice roll. */
          /* Guaranted to be random.   */
    )

    type arr_of_int = array of int
    type matrix     = array of arr_of_int
    var mat : matrix := matrix[3] of arr_of_int[3] of 0

    var decrease_me := 50

    function reverse(str : string) : string =
    let
        var reversed := ""
        var len := size(str)
    in
        for i := 0 to len - 1 do
        (
            reversed := concat(reversed, substring(str, len - 1, 1));
            len := len - 1
        );
        reversed
    end
in



    /*  Part One */

    /*  FIXME: Declare variables
     *  Declare two variables: an integer named "age", and a string named "name" with corresponding values (your name and age)
    */

    /* SEE LET SECTION */



    /*  FIXME: Array
     *  create a new string array called "shoppingList", with three elements of your choice. Create an int variable containing the number of
     *  elements in "shoppingList" (using a function of the array/using the array if available)
    */

    /* SEE LET SECTION TOO */



    /*  FIXME: Print
     *  Print the following sentence in the console "You are NAME and you are AGE years old !". Don't forget to add a newline at the end
    */
    print("You are "); print(name); print(" and you are "); print_int(age); print(" years old !\n");



    /*  FiXME: Concatenation
     *  Create a new string variable called "hello" which value is "Hello ". Add "name" at the end of "hello" (Concatenation) then print it
    */
     hello := concat(hello, name);
     print(hello); print("\n");



    /*  FIXME: For-loop - Integer
     *  Create a simple for-loop for an integer "i" going from 1 to 10 that print the value of "i"
    */
    for i := 0 to 10 do
    (
        print_int(i);
        print("\n")
    );



    /*  FIXME: For-loop - shoppingList
     *  Create a for loop that iterate through "shoppingList" and prints each element.
    */
    shoppingList[0] := "a tiger";
    shoppingList[1] := "some sleep";
    shoppingList[2] := "tea";
    for i := 0 to list_len - 1 do ( print(shoppingList[i]); print("\n") );



    /*  FIXME: Foreach-loop
     *  Do the same with a foreach-loop.
    */
    /* No foreach loop in Tiger (apparently)*/




    /*  FIXME: If-statement
     *  Modify the first for-loop (with i from 1 to 10) such that it prints "(value of i) is even" when "i" is divisible
     *  by 2 (You may want to learn more about "modulo" (%)). Else, print "(value of i) is odd".
    */
    for i := 0 to 10 do
    (
        if mod(i, 2) = 0 then
        (
            print_int(i);
            print(" is even\n")
        )
        else ( print_int(i); print(" is odd\n") )
    );



    /*  FIXME: Sum Up
     *  Create a string variable called "element" with the value of your choice. Then create a for-loop that checks if "shoppingList" contains
     *  "element". If yes, print "You have to buy (value of element) !", and stop the loop (search how to stop a loop).
     *  If not, print "Nope, you don't need (value of "element")".
    */
    for i := 0 to list_len do
    (
        if streq(shoppingList[i], element) then ( in_list := 1; break )
    );
    if in_list = 1 then ( print("You have to buy "); print(element); print("!\n") )
    else ( print("Nope, you don't need "); print(element); print(".\n") );




    /*  FIXME: Functions - Ascii
     *  Create a function that returns nothing and which doesn't takes any parameter. It should just be named "TriForce"
     *  and print the TriForce symbol (one triangle over two other ones, can be found on internet) with "TRIFORCE"
     *  Don't forget to call the function !
    */
    TriForce();





    /*  FIXME: Functions - One parameter
     *  Create a function that takes a string as parameter and returns "Hello (value of string) !"
    */
    Hello("ACU");




    /*  FIXME: Functions - Multiple parameters
     *  Create a function that takes two integers as parameters and returns the addition of these two.
     *  You can do the same with multiplication, subtraction and division.
    */
    /* Let's do the positive modulo (only) because we need it, shall we ? */
    print_int(mod(10, 3));
    print("\n");




    /*  FIXME: User entry
     *  Create a string variable that takes what the user enter in the console as value. Then print "You entered (value of string)"
    */
    print("Input something: ");
    flush();
    c := getchar();
    while c <> "\n" do (user_input := concat(user_input, c); c := getchar());
    print(user_input); print("\n");




    /*  FIXME: While loop
     *  Create a while loop that takes a number and divides it by 2 until it is less than 3
    */

     while decrease_me > 3 do (decrease_me := decrease_me / 2; print_int(decrease_me); print("\n"));




    /*  FIXME: do-While loop
     *  Do the same with a do-while loop
    */
    /* No do-while, but one can emulate it by running its content once before entering the loop */



    /*  FIXME: Random generator
     *  Create a function that returns a random number
    */
    /* Since I am not sure if there are any random generator in Tiger right now,
    I'll just post XKCD's solution: */
    print_int(get_random()); /* http://www.xkcd.com/221/ */
    print("\n");


    /*  FIXME: Random generator with bounds
     *  Create another function that returns a random number between two bounds given as parameters.
    */
    /* Same here */



    /*  FIXME: Multidimensional array
     *  Create a two dimensional int array of 3 columns and 3 rows. Use 2 for-loops to add a random number
     *  between 1 and 9 in each of the 9 rooms.
     *  You may use one of the two previously created function.
     *  Then print them such that they appear like this (with [x1,x9] being the 9 random integers):
     *  {x1,x2,x3,}
     *  {x4,x5,x6,}
     *  {x7,x8,x9,}
    */
    for i := 1 to 2 do
        mat[i] := arr_of_int[3] of 0;

    for i := 0 to 2 do
        for j := 0 to 2 do
            mat[i][j] := i * 3 + j;

    for i := 0 to 2 do
    (
        print("{ ");
        for j := 0 to 2 do
        (
            print_int(mat[i][j]);
            print(", ")
        );
        print("}\n")
    );



    /*  FIXME: Switch
     *  Create a Switch that takes an integer "a" and return a sentence regarding the value of a
     *  (Create 3 statements for 3 specific values and a default one)
    */
    /* No switch in Tiger (?) */



    /*  FIXME: logic Gates
     *  Create 7 functions for each logic gates (And, Or, No, Nand, Nor, Xnor, Xor).
     *  Each function takes two booleans as parameters and returns the result of the logic gate.
     *  (or You can do it with a switch and only one function)
    */
    /* No boolean, no switch, same as defining functions with two parameters. */


    /*  FIXME - Reverse
     *  Create a function that reverse a string
    */
    print(reverse("Hello you !"));
    print("\n")


end
